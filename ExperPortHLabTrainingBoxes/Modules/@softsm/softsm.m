function ssm = softsm(a)
   
   if nargin==0,

      myfig = figure;
      set(myfig, 'Units', 'pixels'); 
      screen_size = get(0, 'ScreenSize');
      set(myfig, 'Position', [screen_size(3)-220 screen_size(4)-320 220 270]);
      
      set(myfig, 'ToolBar', 'none', 'MenuBar', 'none', ...
                     'Name', 'State Machine', 'NumberTitle', 'off');
      
      
      leftbutton   = uicontrol(myfig, 'Style', 'PushButton', 'Units', ...
                               'normalized', 'Position', [0.04 0.525 0.25 ...
                          0.125], 'String', 'Left',   'BackGroundColor', 'g');
      centerbutton = uicontrol(myfig, 'Style', 'PushButton', 'Units', ...
                               'normalized', 'Position', [0.375 0.525 ...
                          0.25 0.125], 'String', 'Center', ...
                               'BackGroundColor', 'g');
      rightbutton  = uicontrol(myfig, 'Style', 'PushButton', 'Units', ...
                               'normalized', 'Position', [0.705 0.525 ...
                          0.25 0.125], 'String', 'Right', ...
                               'BackGroundColor', 'g');
      outbutton    = uicontrol(myfig, 'Style', 'PushButton', 'Units', ...
                               'normalized', 'Position', [0.04 0.4 ...
                          0.92 0.125], 'String', 'Out', ...
                               'BackGroundColor', 'c');

      statebutton = uicontrol(myfig, 'Style', 'PushButton', 'Units', ...
                              'normalized', 'Position', [0.03 0.82 ...
                          0.45 0.08], 'String', 'State = 0', 'FontSize', ...
                              10, 'FontWeight', 'bold');
      timerbutton = uicontrol(myfig, 'Style', 'PushButton', 'Units', ...
                              'normalized', 'Position', [0.03 0.9 ...
                          0.45 0.08], 'String', 'Time = ', 'FontSize', ...
                              10, 'FontWeight', 'bold');
      doutbutton  = uicontrol(myfig, 'Style', 'Text', 'Units', ...
                              'normalized', 'Position', [0.57 0.01 ...
                          0.4 0.14], 'String', 'DOut = 00000000', ...
                              'FontSize', 10, 'FontWeight', 'bold');
      toutbutton  = uicontrol(myfig, 'Style', 'Text', 'Units', ...
                              'normalized', 'Position', [0.01 0.01 ...
                          0.4 0.14], 'String', 'Trigout = 00000000', ...
                              'FontSize', 10, 'FontWeight', 'bold');
      
      set([leftbutton;centerbutton;rightbutton;outbutton], 'FontSize', ...
                        10, 'FontWeight', 'bold');

      set(myfig, 'WindowButtonMotionFcn', {@softsm_motion_callback, ...
                          leftbutton,   get(leftbutton,   'Position'), ...
                          centerbutton, get(centerbutton, 'Position'), ...
                          rightbutton,  get(rightbutton,  'Position'), ...
                          outbutton,    get(outbutton,    'Position')}, ...
                     'Interruptible', 'off', 'BusyAction', 'queue');
      
      mydata = struct( ...
          'Running',         0,              ...
          'StateMatrix',    [],              ...
          'Dout',            0,              ...
          'Trigout',         0,              ...
          'nevents',         0,              ...
          'EventList',       zeros(200000, 4),  ...
          'Init_time',       clock,          ...
          'PC_Ready',        1,              ...
          'CurrentState',    0,              ...
          'Dout_bypass',     0,              ...
          'LastStChangeTime',0,              ...
          'flushing_now',    0,              ...
          'event_queue',     {cell(0, 2)},   ...
          'doutbutton',      doutbutton,     ...  
          'toutbutton',      toutbutton,     ...  
          'statebutton',     statebutton,    ...  
          'timerbutton',     timerbutton,    ...  
          'dout_callback',   [],             ...
          'tout_callback',   []              ...
          );

      set(myfig, 'UserData', mydata);
      
      ssm = struct( ...
          'myfig',           myfig         ...        
          );      
      ssm = class(ssm, 'softsm');


      return;
      
   elseif isa(ssm, 'softsm'),
      ssm = a;
      return;
      
   else
      error(['Don''t understand this argument for creation of a ' ...
             'softsm']);
   end;
   
          